# This pipeline:
# fetches the repository
# sets up a host to run
# builds the application

# name of the pipeline
name: Java build pipeline with Gradle

# the actions, which triggers the pipeline
on:
  # when a new commit is pushed
  push:
  # when commits are pushed to the master branch
  pull_request:
    branches: [ master ]

# this jobs will be executed during the action (these are the reactions of the actions/event above)
jobs:
  build:
    # specify the system(s), which will run the app - sets up also the systems
    runs-on: [ ubuntu-latest]
    # define steps to run the app
    steps:
    # fetch the repository
    - uses: actions/checkout@v3
    # validate gradlew script
    - uses: gradle/wrapper-validation-action@v1
    # setup the JDK (java version)
    - name: Set up JDK 15
      uses: actions/setup-java@v1
      with:
        java-version: 15
      # list the files of the repo (in the log you will see if something is missing)
    - name: List files
      run: ls -a
      # grant execute persmission to the gradlew file (otherwise will fail)
    - name: grant permissions
      run: chmod +x gradlew
      # use the predefined gradle build action (cache is automated)
      # in reality it`s just run the ./gradlew command
    - uses: gradle/gradle-build-action@v2
      with:
        # ./gradlew build --scan will be executed: build action of gradle and it also provides a short summary about the build as output
        arguments: build --scan
      # run the app (produces output from app)
    - uses: gradle/gradle-build-action@v2
      with:
        arguments: run
      
